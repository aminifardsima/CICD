stages:
  - build
  - test
  - deploy




build-image:
  stage: build
  image: docker:latest
  tags:
    - dind
  services:
    - name: docker:dind
      command: ["--tls=false"]
  script:
    - echo "Logging into GitLab Container Registry..."
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
    - docker build -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA" .
    - echo "Pushing image to GitLab Container Registry..."
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHA"
    - echo "CI_REGISTRY_IMAGE:" "$CI_REGISTRY_IMAGE"
    - echo "CI_COMMIT_SHA:" "$CI_COMMIT_SHA"    


test_job:
  stage: test
  image: docker:latest
  script:
    - echo "Running tests...."
  
  tags:
    - dind



deploy:
  stage: deploy
  image: dtzar/helm-kubectl:latest
  tags:
    - dind
  services:
    - name: docker:dind
      command: ["--tls=false"]
      alias: docker
  script:
    - echo "Deploying application to Kubernetes..."
    - mkdir -p ~/.kube
    - echo "$KUBE_CONFIG" | base64 -d > ~/.kube/config
    - echo "Checking Kubernetes cluster info..."
    - kubectl cluster-info
    - kubectl get nodes
    - echo "Creating a pod from the new image..."
    - helm upgrade --install my-spark-app ./deploy --set image.repository="$CI_REGISTRY_IMAGE" --set image.tag="$CI_COMMIT_SHA" --set env.DATA_PATH="/app/data/new_train.parquet"  --set volumes[0].hostPath.path="/mnt/data"
    - kubectl get pods
  only:
    - main
